# Copyright 2024-2025 Aleksejs Giruckis
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# docker-compose.yml

services:
  web:
    build: .
    container_name: itg_django_web # Добавлено имя контейнера
    restart: always
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - 8000
    depends_on:
      db:
        # Добавим healthcheck зависимость для надежности
        condition: service_healthy
    env_file:
      - .env # Используем .env по умолчанию
    networks:
      - app-network

  db:
    image: postgres:13 # Или postgres:15
    container_name: itg_postgres_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./postgresql/init-scripts:/docker-entrypoint-initdb.d
    env_file:
      - .env # Оставляем env_file для других переменных, если они есть
    environment:
      # <<< --- Добавьте или раскомментируйте эти три строки --- >>>
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: ${PG_NAME}
      # <<< ----------------------------------------------------- >>>
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  nginx:
    image: nginx:1.21 # Рассмотрите более новую версию, например nginx:stable-alpine
    container_name: itg_nginx # Добавлено имя контейнера
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro # Конфиг только для чтения
      - static_volume:/app/staticfiles:ro # Статика только для чтения
      - media_volume:/app/media:ro # Медиа только для чтения
    ports:
      # Пробрасываем порт 80 Nginx на порт 80 хоста
      # Если порт 80 занят, измените левую часть, например "8080:80"
      - "80:80"
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume: